" Force use of utf-8
set encoding=utf-8

syntax on

" Add modeline functionality -- it's disabled by default on some distros
set modeline

filetype plugin on

" Custom filetypes per extension. Not sure this is the recommended way to do it.
autocmd BufRead,BufNewFile *.wiki setlocal ft=creole
autocmd BufRead,BufNewFile *.tex setlocal ft=tex
autocmd BufRead,BufNewFile *.cool setlocal ft=cool
autocmd BufRead,BufNewFile *.cl setlocal ft=cool
autocmd BufRead,BufNewFile *.miC setlocal ft=C
autocmd BufRead,BufNewFile *.g setlocal ft=antlr
autocmd BufRead,BufNewFile *.rkt setlocal ft=scheme
autocmd BufRead,BufNewFile *.[sS] setlocal ft=asm
autocmd BufRead,BufNewFile Makefile.* setlocal ft=make
autocmd BufRead,BufNewFile SConstruct* setlocal ft=python tw=0
autocmd BufRead,BufNewFile SConscript* setlocal ft=python tw=0

" Use vundle for plugin management
set nocompatible
"filetype off
" You will need to install Vundle
"set rtp+=~/.vim/bundle/Vundle.vim
"call vundle#begin()

"Plugin 'Valloric/YouCompleteMe'

"Plugin 'ap/vim-css-color'
"
"let s:use_ansible_vim = 1
"if (s:use_ansible_vim == 1)
"	Plugin 'pearofducks/ansible-vim'
"
"	let g:ansible_unident_after_newline = 1
"	let g:ansible_attribute_highlight = "ab"
"	let g:ansible_name_highlight = "b"
"	let g:ansible_extra_keywords_highlight = 1
"endif
"
"call vundle#end()
" vundle end
" Done youcompleteme

filetype plugin indent on

set autowrite
set nowrap

" Use /tmp as directory for temporary files
set dir=/tmp

" Ripped off from Alexandru Mosoi
set statusline=%<%f\ %y%h%m%r%=%-24.(0x%02B,%l/%L,%c%V%)\ %P
set laststatus=2
set wildmenu
" /ripoff

" Mappings for lgrep to search for definitions in the current directory
" recursively
nnoremap <silent><leader>l :lgrep <C-R>=expand("<cword>")<CR> -nr .<CR><CR>
nnoremap <leader>w :lw<CR>

" More tabs -- we have enough memory.
set tabpagemax=20

" Mark tabs and spaces
set list listchars=tab:᚛·,

" Highlight current line
set cursorline

" Open new vertical splits to the right of current one.
set splitright

" Open horizontal splits down
set splitbelow

set hidden
set smartcase
set ignorecase

nnoremap <F9> :cwindow<CR>
nnoremap <F10> :ccl<CR>

nnoremap <silent><leader>, :noh<cr>

" Required for kitty proper colors - https://github.com/kovidgoyal/kitty/issues/108
let &t_ut=''

" Fold methods and structures automatically
set foldlevel=7
set foldmethod=syntax

map , <leader>
" Go to previous buffer when deleting the buffer in stead of killing the
" current split (or tab)
nnoremap <silent> <leader>b :bp\|bd#<CR>

" Make ci\X and di\X commands act similar to ci" and di" respectively
nnoremap <silent> ci( hf(ci(
nnoremap <silent> ci[ hf[ci[
nnoremap <silent> ci{ hf{ci{
nnoremap <silent> di( hf(di(
nnoremap <silent> di[ hf[di[
nnoremap <silent> di{ hf{di{

" Make also C-w work in insert mode
inoremap <silent> <C-w>h <C-o><C-w>h
inoremap <silent> <C-w>j <C-o><C-w>j
inoremap <silent> <C-w>k <C-o><C-w>k
inoremap <silent> <C-w>l <C-o><C-w>l

" Restore position inside previously opened file.  From vim.wikia.
function! ResCur()
	if line("'\"") <= line("$")
		normal! g`"
		return 1
	endif
endfunction

augroup resCur
	autocmd!
	autocmd BufWinEnter * call ResCur()
augroup END

" Set colorscheme and other quality of life stuff
set t_Co=256
colorscheme mopkai

set mouse=
set completeopt=longest,menuone
set number relativenumber
set colorcolumn=80

" highlight as the search phrase is entered
set incsearch
" Keep the current line 10 lines from top/bottom
set scrolloff=10
set bs=2

command! -bar GitBlame execute '!git blame "%" -L ' . line(".") . ',' . line(".")
nnoremap <leader>g :GitBlame<CR>

" Enter key will select a list item, if a list is visible
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<CR>"

" Enable recursive search
" set path+=**

" Highlight trailing whitespaces
highlight UselessWhitespace ctermbg=darkred
match UselessWhitespace /\s\+$/
autocmd ColorScheme * highlight UselessWhitespace ctermbg=darkred
autocmd BufRead,BufNewFile * highlight UselessWhitespace ctermbg=darkred
